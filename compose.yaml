# Defines containers (services) for the project.
# This encompasses a server (web server - ExpressJS), db (database server - MySQL)
services:
  server:
    container_name: web-server
    restart: unless-stopped                     # Ensures the container restart automatically unless stopped
    volumes:                                    # Map files between the host and the container
      - .:/usr/src/app                          # Map current directory to usr/src/app on the container
      - /usr/src/app/node_modules               # Prevent the host's node_modules overriding the container's
    depends_on:                                 # Tell this server to waits until the db started & running (service_healthy)
      db:
        condition: service_healthy
    build:
      context: .                                # Use the Dockerfile of the current directory (THIS FILE :D)
    environment:                                # Set somes Env Variables
      - NODE_ENV=development
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=newsfeed
      - DB_PORT=3306
      - CHOKIDAR_USEPOLLING=true                # Watching file changes library
    ports:
      - 3080:3080
    networks:                                   # Assigns the container to the "nodejss" network so it can interact with db service.
      - nodejss
  db:
    container_name: mysql-server
    restart: unless-stopped                     # Ensures the container restart automatically unless stopped
    image: mysql:latest                         # Uses the latest MySQL image from Docker Hub.
    environment:
      - MYSQL_DATABASE=newsfeed
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - mysql_newsfeed_data:/var/lib/mysql      # Persist MySQL data across container restarts or removals
      # Mounts 01_init.sql from the host’s ./server/db/ directory to /docker-entrypoint-initdb.d/ to init db structure
      - ./server/db/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql
      # Mounts 02_data.sql from the host’s ./server/db/ directory to /docker-entrypoint-initdb.d/ to add db data
      - ./server/db/02_data.sql:/docker-entrypoint-initdb.d/02_data.sql
    ports:
      - 3306:3306
    networks:
      - nodejss                                 # Assigns the container to the "nodejss" network so it can interact with db service.
    healthcheck:                                # Defines a healthcheck to ensure the db runs before the "server" starts.
      test: [
        "CMD",
        "mysqladmin",
        "ping",
        "-h",
        "localhost",
        "-u",
        "root",
        "-proot"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
      
volumes:                                        # Defines persistent data storage
  mysql_newsfeed_data:

networks:                                       # Defines custom networks
  nodejss:
